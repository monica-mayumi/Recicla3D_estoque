DROP TABLE IF EXISTS public.t_pedido_compra, public.t_item_pedido_compra;
DROP TABLE IF EXISTS public.t_matr_prim;
DROP TABLE IF EXISTS public.t_fornecedor;
DROP TABLE IF EXISTS public.t_login;
DROP TABLE IF EXISTS public.t_perfil;
DROP TABLE IF EXISTS public.t_usuario, public.t_usuario_perfil;
---------------------------------------------------------------------------------------
ALTER TABLE IF EXISTS public.t_login              DROP CONSTRAINT IF EXISTS pk_t_login;
ALTER TABLE IF EXISTS public.t_fornecedor         DROP CONSTRAINT IF EXISTS pk_t_fornecedor;
ALTER TABLE IF EXISTS public.t_matr_prim          DROP CONSTRAINT IF EXISTS pk_t_matr_prim;
ALTER TABLE IF EXISTS public.t_matr_prim          DROP CONSTRAINT IF EXISTS fk_t_matr_prim;
ALTER TABLE IF EXISTS public.t_pedido_compra      DROP CONSTRAINT IF EXISTS fk_t_pedido_compra_fornec;
ALTER TABLE IF EXISTS public.t_pedido_compra      DROP CONSTRAINT IF EXISTS pk_t_pedido_compra;
ALTER TABLE IF EXISTS public.t_pedido_compra      DROP CONSTRAINT IF EXISTS fk_t_pedido_compra_pedido;
ALTER TABLE IF EXISTS public.t_item_pedido_compra DROP CONSTRAINT IF EXISTS pk_t_item_pedido_compra;
ALTER TABLE IF EXISTS public.t_item_pedido_compra DROP CONSTRAINT IF EXISTS fk_t_item_pedido_compra ;
ALTER TABLE IF EXISTS public.t_item_pedido_compra DROP CONSTRAINT IF EXISTS fk_t_item_pedido_compra_matprima;

ALTER TABLE IF EXISTS public.t_usuario            DROP CONSTRAINT IF EXISTS pk_t_usuario;
ALTER TABLE IF EXISTS public.t_usuario            DROP CONSTRAINT IF EXISTS fk_t_usuario;

--
-------------------
-- Table: t_login
-------------------
CREATE TABLE IF NOT EXISTS  public.t_login
(
    login_id    SERIAL  NOT NULL,
    login_nome  VARCHAR(50) NOT NULL,
    login_senha VARCHAR(14) NOT NULL
);
ALTER TABLE public.t_login OWNER to postgres;
------------------- 
-- Table: t_fornecedor 
-------------------
CREATE TABLE IF NOT EXISTS  public.t_fornecedor
(
    fornec_id                 SERIAL      NOT NULL,
    fornec_nome_empresa       VARCHAR(50) NOT NULL,
    fornec_email              VARCHAR(50) NOT NULL,
    fornec_cnpj               VARCHAR(20) NOT NULL,
    fornec_telefone_comercial VARCHAR(20) NOT NULL,
	fornec_cep                VARCHAR(10),
	fornec_endereco           VARCHAR(10),	
	fornec_numero 			  VARCHAR(10),
	fornec_complemento 		  VARCHAR(10),
	fornec_bairro 			  VARCHAR(10),
	fornec_municipio 		  VARCHAR(10),
	fornec_uf 				  VARCHAR(10)
);
ALTER TABLE public.t_fornecedor OWNER to postgres;    
-------------------
-- Table: public.t_matr_prim
-------------------
CREATE TABLE IF NOT EXISTS public.t_matr_prim
(
    matr_prim_id              SERIAL NOT NULL,
    matr_prim_descricao       VARCHAR,
    matr_prim_custo_unitario  NUMERIC,
    matr_prim_categoria       VARCHAR,
    matr_prim_fornec_id       INTEGER 
);	
ALTER TABLE public.t_matr_prim OWNER to postgres;
-------------------
-- Table: t_pedido_compra
-------------------
CREATE TABLE IF NOT EXISTS public.t_pedido_compra
(
    pedido_compra_id             SERIAL NOT NULL,
    pedido_compra_fornec_id      integer,
	pedido_compra_data_entrega   date,
	pedido_compra_condicao_pagto VARCHAR,
	pedido_compra_valor_total    NUMERIC(10,0),
 	pedido_compra_obs            VARCHAR,
	pedido_compra_status         VARCHAR,
	pedido_compra_itens_pedido_compra_id INTEGER
);
ALTER TABLE public.t_pedido_compra OWNER to postgres;
-------------------
-- Table: t_item_pedido_compra
-------------------
CREATE TABLE IF NOT EXISTS public.t_item_pedido_compra
(
    item_pedido_compra_id SERIAL NOT NULL,
    item_pedido_compra integer,
	item_pedido_compra_matr_prim_id integer,	
	item_pedido_compra_quantidade bigint,
    item_pedido_compra_valor_unitario numeric(10,0)
);
ALTER TABLE public.t_item_pedido_compra OWNER to postgres;
-------------------
-- Table: t_perfil
-------------------
CREATE TABLE IF NOT EXISTS public.t_perfil
(
    perfil_id VARCHAR(50) NOT NULL,
    descricao VARCHAR(50) NOT NULL
);
ALTER TABLE public.t_perfil OWNER to postgres;
-------------------
-- Table: t_usuario
-------------------
CREATE TABLE IF NOT EXISTS public.t_usuario
(
	usuario_id        SERIAL NOT NULL,
    usuario_login             VARCHAR(45),
	usuario_senha             VARCHAR,
	usuario_nome_completo     VARCHAR,
	usuario_data_nascimento   DATE, 
	usuario_cpf               VARCHAR(11),
	usuario_email             VARCHAR(100),
	usuario_foto_perfil       VARCHAR,
	usuario_hash              VARCHAR,
    usuario_perfil_id         VARCHAR
);
ALTER TABLE public.t_usuario OWNER to postgres;
-------------------
-- Table: t_usuario_perfil
-------------------
CREATE TABLE IF NOT EXISTS public.t_usuario_perfil
(
	usuario_id         INTEGER,
    usuario_perfil_id  VARCHAR(45)
);
ALTER TABLE public.t_usuario_perfil OWNER to postgres;
-------------------
-- ALTER TABLES
-------------------
ALTER TABLE public.t_login
 ADD CONSTRAINT pk_t_login PRIMARY KEY (login_id)
;
ALTER TABLE public.t_fornecedor
 ADD CONSTRAINT pk_t_fornecedor  PRIMARY KEY (fornec_id)
;
ALTER TABLE public.t_matr_prim
 ADD CONSTRAINT pk_t_matr_prim   PRIMARY KEY (matr_prim_id)
;
ALTER TABLE public.t_matr_prim
 ADD CONSTRAINT fk_t_matr_prim   FOREIGN KEY (matr_prim_fornec_id)
        REFERENCES public.t_fornecedor (fornec_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
        NOT VALID
;
---
ALTER TABLE public.t_pedido_compra      
 ADD CONSTRAINT pk_t_pedido_compra      PRIMARY KEY (pedido_compra_id)
;
ALTER TABLE public.t_pedido_compra  
 ADD CONSTRAINT fk_t_pedido_compra_fornec FOREIGN KEY (pedido_compra_fornec_id)
        REFERENCES public.t_fornecedor (fornec_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
;
---------------------------------------------------------------------------------------
ALTER TABLE public.t_item_pedido_compra 
 ADD CONSTRAINT pk_t_item_pedido_compra PRIMARY KEY (item_pedido_compra_id)
;
ALTER TABLE public.t_item_pedido_compra
 ADD CONSTRAINT fk_t_item_pedido_compra FOREIGN KEY (item_pedido_compra)
        REFERENCES public.t_pedido_compra (pedido_compra_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
;
ALTER TABLE public.t_item_pedido_compra
 ADD CONSTRAINT fk_t_item_pedido_compra_matprima FOREIGN KEY (item_pedido_compra_matr_prim_id)
        REFERENCES public.t_matr_prim (matr_prim_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
;
ALTER TABLE public.t_pedido_compra  
 ADD CONSTRAINT fk_t_pedido_compra_pedido FOREIGN KEY (pedido_compra_itens_pedido_compra_id)
        REFERENCES public.t_item_pedido_compra (item_pedido_compra_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
;
---------------------------------------------------------------------------------------
--ALTER TABLE public.t_usuario 
-- ADD CONSTRAINT pk_t_usuario PRIMARY KEY (usuario_id)
--;
--ALTER TABLE public.t_usuario
-- ADD CONSTRAINT fk_t_usuario FOREIGN KEY (usuario_perfil_id)
--        REFERENCES public.t_usuario_perfil (usuario_perfil_id) MATCH SIMPLE
--        ON UPDATE NO ACTION
--        ON DELETE NO ACTION
--;


